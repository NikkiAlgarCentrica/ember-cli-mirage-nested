h3 Those are your Ember models:
br
= mirage-seed-data/debug-ember-model-property [
  model=model.ember
  propertyName='children.length'
]
each model.ember.children as |child|
  = mirage-seed-data/debug-ember-model-property [
    model=child
    propertyName='children.length'
  ]
  = mirage-seed-data/debug-ember-model-property [
    model=child
    propertyName='title'
  ]
br
br
br
h3 Those are your mirage seed data, play with it:
.row.mt10
  .col-xs-10.col-xs-offset-1
    | parent: 1
    = mirage-seed-data/debug-model [
      model=model.mirage
      level=1
      refreshRoute=(route-action 'refresh')
      parentAssociationsHaveChanged=(route-action 'refresh')
      sendError=(route-action 'sendError')
    ]

if error
  = to-elsewhere [
    named="modal"
    send=(hash body=(component "mirage-seed-data/error-modal" error=error close=(action (mut error) false)))
  ]

br
br
h3 This is how you should write your scenario in scenarios/default:
| let parent, children, grandChildren, child;
br
| parent = server.create('parent');
br
with model.mirage.children.models as |children|
  if children.length
    if (eq children.length 1)
      | child = parent.hasOne('children', {
      br
      | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;title: "{{children.firstObject.title}}"
      br
      | &nbsp;});
      br
      each children as |child index|
        with child.children.models as |grandChildren|
          if grandChildren.length
            if (eq grandChildren.length 1)
              | grandChildren = child.hasOne('children');
            else
              | grandChildren = child.hasMulti('children', {{grandChildren.length}});
            br
    else
      | children = parent.hasMulti('children', {{children.length}});
      br
      each children as |child index|
        with child.children.models as |grandChildren|
          if grandChildren.length
            if (eq grandChildren.length 1)
              | grandChildren = child[{{index}}].hasOne('children');
            else
              | grandChildren = child[{{index}}].hasMulti('children', {{grandChildren.length}});
            br
